#!/bin/bash

autoprefixed_git() {
    COMP_LINE="git ${COMP_LINE#$1}"
    ((COMP_POINT += 4))
    COMP_WORDS=('git' "${COMP_WORDS[@]}")
    COMP_WORDS[1]="${COMP_WORDS[1]#$1}"
    ((++COMP_CWORD))
    _git
}

__prefixed_git()    { autoprefixed_git ""   ; }
_g_prefixed_git()   { autoprefixed_git "g"  ; }
_git_prefixed_git() { autoprefixed_git "git"; }

# Alias git commands and aliases to prevent from typing "git " each time
# but watch for system commands, bash builtins, functions and aliases conflicts
git_aliases() {
    prefixes=('' 'g' 'git') # must have the associated _${prefix}_prefixed_git() functions
    local git_commands="$(
        ( LC_ALL="C" git help --all | awk 'BEGIN { bin=0 }; bin==1 && /^$/ { bin=0 }; bin==1 { for(i=1;i<=NF;++i) print $i } ; bin==0 && /^----------*/ { bin=1 }'
          git config --global --get-regexp 'alias\..*' | sed -r -e 's/^alias\.([^ ]*) .*$/\1/'
        ) | sort
    )"
    for prefix in "${prefixes[@]}"; do
        complfunction="_${prefix}_prefixed_git"
        for cmd in $git_commands; do
            if ! type "$prefix$cmd" >/dev/null 2>&1; then
                alias "$prefix$cmd"="git $cmd"
                complete -o bashdefault -o default -o nospace -F $complfunction $prefix$cmd 2>/dev/null \
                    || complete -o default -o nospace -F $complfunction $prefix$cmd
            fi
        done
    done
}

if [ "$(basename "$0")" = "git_aliases" ]; then
	# Install the aliases
	git_aliases
fi
